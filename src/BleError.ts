export enum BleErrorCode {
  ERROR_GENERIC = 'ERROR_GENERIC',
  ERROR_BLE_NOT_SUPPORTED = 'ERROR_BLE_NOT_SUPPORTED',
  ERROR_MISSING_PERMISSIONS = 'ERROR_MISSING_PERMISSIONS',
  ERROR_BLE_NOT_ENABLED = 'ERROR_BLE_NOT_ENABLED',
  ERROR_INVALID_ARGUMENTS = 'ERROR_INVALID_ARGUMENTS',
  ERROR_DEVICE_NOT_FOUND = 'ERROR_DEVICE_NOT_FOUND',
  ERROR_OPERATION_CANCELED = 'ERROR_OPERATION_CANCELED',
  ERROR_SCAN = 'ERROR_SCAN',
  ERROR_INVALID_STATE = 'ERROR_INVALID_STATE',
  ERROR_GATT = 'ERROR_GATT',
  ERROR_NOT_CONNECTED = 'ERROR_NOT_CONNECTED',
  ERROR_NOT_INITIALIZED = 'ERROR_NOT_INITIALIZED',
}

export class BleError extends Error {
  constructor(public readonly code: BleErrorCode, message: string = code) {
    super(message)
    this.name = 'BleError'
  }
}
